
Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v)), Print (ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v)), Print (ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v)), WriteHeap( v, 30)]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v)), WriteHeap( v, 30)]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=(1,int)}

Output: 
[20, 35]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v),  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2,  int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v,  v = 2, Print (v), Print (v), v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2, 2, 2, 2, 2, 2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2, 2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@55558bfa}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{varf=test.in, x=false, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=false, y=false}

Output: 
[false]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=false, y=false}

Output: 
[false]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=(1,int)}

Output: 
[20, 35]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=(1,int)}

Output: 
[20, 35]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a))), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a))), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))), New(v,30)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))), New(v,30)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(3,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int), 3=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(3,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int), 3=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(2,Ref(int)), v=(3,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int), 3=30}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2, 18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2, 18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18, v=2}

Output: 
[2, 18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x && y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x && y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x && y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x && y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=false, y=false}

Output: 
[false]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool y,  x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x), bool y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  y = false,  x = x || y, Print (x)]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x), x = true]

SymTable: 
{x=false, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = false,  x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x), y = false]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = x || y, Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), x = x || y]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=false}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3,  Print (y), Print (x)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (y), Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x), Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x)]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2, true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ bool x,  int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y), bool x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y), int y]

SymTable: 
{x=false}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = true,  if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y), x = true]

SymTable: 
{x=false, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ if x then y = 2 else y = 3, Print (y)]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), if x then y = 2 else y = 3]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y), y = 2]

SymTable: 
{x=true, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (y)]

SymTable: 
{x=true, y=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=true, y=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@38bea4c4}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), v = 4]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), v = 4]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), v = 4]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), v = 4]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int x,  int y,  x = 32,  y = 42, Print (x <= y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y), int x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y), int x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y), int y]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y), int y]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y), x = 32]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y), x = 32]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y)]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y)]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y), y = 42]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y), y = 42]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y)]

SymTable: 
{x=32, y=42}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y)]

SymTable: 
{x=32, y=42}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=32, y=42}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (v), Print (a), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (v), Print (a), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (v), Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ Print (v), Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a), Print (v)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a), Print (v)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[(1,int)]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[(1,int)]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[(1,int), (2,Ref(int))]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 8
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 9
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 9
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 9
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 9
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 9
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 10
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (v), Print (a)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (v), Print (a), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (v), Print (a), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (v), Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ Print (v), Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a), Print (v)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a), Print (v)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[(1,int)]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[(1,int)]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[(1,int), (2,Ref(int))]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)), Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))+5), Print (ReadHeap(v))]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))+5), Print (ReadHeap(v))]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))+5)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[20, 25]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v)), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Print (ReadHeap(v)),  WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v)), Print (ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v)), Print (ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ WriteHeap( v, 30), Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v)), WriteHeap( v, 30)]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v)), WriteHeap( v, 30)]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (5+ReadHeap(v))]

SymTable: 
{v=(1,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=(1,int)}

Output: 
[20, 35]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a))), Ref(Ref(int)) a]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(a,v),  New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a))), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a))), New(a,v)]

SymTable: 
{a=(0,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[ New(v,30), Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))), New(v,30)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a))), New(v,30)]

SymTable: 
{a=(2,Ref(int)), v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int)}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(3,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int), 3=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(ReadHeap(a)))]

SymTable: 
{a=(2,Ref(int)), v=(3,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int), 3=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(2,Ref(int)), v=(3,int)}

Output: 
[20]

FileTable: 
{}

Heap: 
{1=20, 2=(1,int), 3=30}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@6bb68a6f}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@36ff8b72}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@50ee5d0c}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@6124cf42}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@599fc4f}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@2ea4e668}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@634e898}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@30afb344}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5d64272b}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5d64272b}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5d64272b}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5d64272b}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5d64272b}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5d64272b}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5d64272b}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@17478c75}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@5ee19599}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@50a26a85}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@3410b415}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 7
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17, 18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17, 18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17, 18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17, 18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18, 17, 18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17, 18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int a,  int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a), int a]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int b,  a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a), int b]

SymTable: 
{a=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ a = 2+3*5,  b = a+1,  Print (b), Print (a)]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a), a = 2+3*5]

SymTable: 
{a=0, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ b = a+1,  Print (b), Print (a)]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a), b = a+1]

SymTable: 
{a=17, b=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (b), Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a), Print (b)]

SymTable: 
{a=17, b=18}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (a)]

SymTable: 
{a=17, b=18}

Output: 
[18]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=17, b=18}

Output: 
[18, 17]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) v,  New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), Ref(int) v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(v,20),  Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a), New(v,20)]

SymTable: 
{v=(0,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(Ref(int)) a,  New(a,v),  Print (v), Print (a)]

SymTable: 
{v=(1,int)}

Output: 
[]

FileTable: 
{}

Heap: 
{1=20}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30, 2=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30, 32]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30, 32]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 3
[]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 22, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30, 2=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 7
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 7
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 7
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30, 2=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(2,int), v=10}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30, 32]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30, 32]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 4
[]

SymTable: 
{a=(2,int), v=32}

Output: 
[10, 30, 32, 30, 10, 30, 32, 30]

FileTable: 
{}

Heap: 
{2=30}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 5
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@c089412}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[32, 0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@daffae8}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0, 0]

FileTable: 
{test.in=java.io.BufferedReader@424c6621}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0, 0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@300562ad}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 2, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 2, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), v = 2]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=2}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=2}

Output: 
[2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 4,  While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), v = 4]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v), v = 4]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ While(v > 0) do  Print (v), v = v-1 endwhile, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=4}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=4}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=3}

Output: 
[4]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=3}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=2}

Output: 
[4, 3]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=2}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile,  Print (v), v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1, Print (v)]

SymTable: 
{v=1}

Output: 
[4, 3, 2]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile, v = v-1]

SymTable: 
{v=1}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v), While(v > 0) do  Print (v), v = v-1 endwhile]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (v)]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{v=0}

Output: 
[4, 3, 2, 1, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int x,  int y,  x = 32,  y = 42, Print (x <= y)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y), int x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y), int x]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int y,  x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y), int y]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y), int y]

SymTable: 
{x=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ x = 32,  y = 42, Print (x <= y)]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y), x = 32]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y), x = 32]

SymTable: 
{x=0, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y)]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ y = 42, Print (x <= y)]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y), y = 42]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y), y = 42]

SymTable: 
{x=32, y=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y)]

SymTable: 
{x=32, y=42}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[Print (x <= y)]

SymTable: 
{x=32, y=42}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{x=32, y=42}

Output: 
[true]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 0
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@2197713d}

Heap: 
{}

Execution Stack: 
ID: 0
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}
