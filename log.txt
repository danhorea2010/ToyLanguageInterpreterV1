
Execution Stack: 
ID: 0
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 0
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 1
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 1
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 1
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 2
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 3
[ string varf,  varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), string varf]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ varf = test.in,  open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), varf = test.in]

SymTable: 
{varf=}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ open(varf),  int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), open(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ int varc,  readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf), int varc]

SymTable: 
{varf=test.in}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc),  readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc), close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ readFile(varf, varc),  Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc), close(varf), readFile(varf, varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[ Print (varc), close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[close(varf), Print (varc)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[close(varf)]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{test.in=java.io.BufferedReader@3581c5f3}

Heap: 
{}

Execution Stack: 
ID: 3
[]

SymTable: 
{varf=test.in, varc=0}

Output: 
[0, 0]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 3
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 3
[ Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 4
[ int v,  Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), int v]

SymTable: 
{}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ Ref(int) a,  v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Ref(int) a]

SymTable: 
{v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ v = 10,  New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), v = 10]

SymTable: 
{a=(0,int), v=0}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ New(a,22),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), New(a,22)]

SymTable: 
{a=(0,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{}

Execution Stack: 
ID: 4
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[ Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))),   Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 4
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a)), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)),  Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=22}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[Print (ReadHeap(a)), Print (v), Fork( WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a)))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 5
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ WriteHeap( a, 30),  v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a)), WriteHeap( a, 30)]

SymTable: 
{a=(1,int), v=10}

Output: 
[10]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ v = 32,  Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a)), v = 32]

SymTable: 
{a=(1,int), v=10}

Output: 
[10, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[ Print (v), Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a)), Print (v)]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[Print (ReadHeap(a))]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32]

FileTable: 
{}

Heap: 
{1=30}

Execution Stack: 
ID: 6
[]

SymTable: 
{a=(1,int), v=32}

Output: 
[10, 30, 32, 30, 32, 30]

FileTable: 
{}

Heap: 
{1=30}
